-- Martil Auto Joiner Bootyyy - Futuristic Hub

local CoreGui = game:GetService("CoreGui")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = CoreGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 250)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

-- Rounded corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Drop shadow
local Shadow = Instance.new("ImageLabel")
Shadow.Size = UDim2.new(1, 30, 1, 30)
Shadow.Position = UDim2.new(0, -15, 0, -15)
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://1316045217"
Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
Shadow.ImageTransparency = 0.5
Shadow.ScaleType = Enum.ScaleType.Slice
Shadow.SliceCenter = Rect.new(10,10,118,118)
Shadow.ZIndex = -1
Shadow.Parent = MainFrame

-- Title Bar
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -20, 0, 40)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Martil Auto Joiner Bootyyy"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = MainFrame

-- Divider
local Divider = Instance.new("Frame")
Divider.Size = UDim2.new(1, -20, 0, 1)
Divider.Position = UDim2.new(0, 10, 0, 42)
Divider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Divider.BorderSizePixel = 0
Divider.Parent = MainFrame

-- Sidebar
local Sidebar = Instance.new("Frame")
Sidebar.Size = UDim2.new(0, 120, 1, -50)
Sidebar.Position = UDim2.new(0, 0, 0, 50)
Sidebar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Sidebar.BorderSizePixel = 0
Sidebar.Parent = MainFrame

local SideUICorner = Instance.new("UICorner")
SideUICorner.CornerRadius = UDim.new(0, 12)
SideUICorner.Parent = Sidebar

-- Sidebar button
local SideButton = Instance.new("TextButton")
SideButton.Size = UDim2.new(1, -10, 0, 40)
SideButton.Position = UDim2.new(0, 5, 0, 10)
SideButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SideButton.Text = "Main"
SideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SideButton.Font = Enum.Font.Gotham
SideButton.TextSize = 16
SideButton.Parent = Sidebar

local SideCorner = Instance.new("UICorner")
SideCorner.CornerRadius = UDim.new(0, 8)
SideCorner.Parent = SideButton

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -130, 1, -60)
ContentFrame.Position = UDim2.new(0, 130, 0, 60)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

-- Toggle Text
local ToggleText = Instance.new("TextLabel")
ToggleText.Size = UDim2.new(0.7, 0, 0, 30)
ToggleText.Position = UDim2.new(0, 0, 0, 0)
ToggleText.BackgroundTransparency = 1
ToggleText.Text = "Start Joiner"
ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleText.Font = Enum.Font.Gotham
ToggleText.TextSize = 16
ToggleText.TextXAlignment = Enum.TextXAlignment.Left
ToggleText.Parent = ContentFrame

-- Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 70, 0, 30)
ToggleButton.Position = UDim2.new(1, -80, 0, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
ToggleButton.Text = "OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = ContentFrame

local BtnCorner = Instance.new("UICorner")
BtnCorner.CornerRadius = UDim.new(0, 8)
BtnCorner.Parent = ToggleButton

-- // KEYBIND SYSTEM (ADDED)
local UserInputService = game:GetService("UserInputService")
local toggleKey = Enum.KeyCode.RightShift -- default keybind
local waitingForKey = false

local KeybindButton = Instance.new("TextButton")
KeybindButton.Size = UDim2.new(0, 150, 0, 30)
KeybindButton.Position = UDim2.new(0, 0, 0, 50) -- under toggle
KeybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
KeybindButton.Text = "Keybind: " .. toggleKey.Name
KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
KeybindButton.Font = Enum.Font.GothamBold
KeybindButton.TextSize = 14
KeybindButton.AutoButtonColor = true
KeybindButton.Parent = ContentFrame

local KeybindCorner = Instance.new("UICorner")
KeybindCorner.CornerRadius = UDim.new(0, 8)
KeybindCorner.Parent = KeybindButton

-- Logic for changing keybind
KeybindButton.MouseButton1Click:Connect(function()
    if waitingForKey then return end
    waitingForKey = true
    local oldText = KeybindButton.Text
    KeybindButton.Text = "Press a key..."

    local conn
    conn = UserInputService.InputBegan:Connect(function(input, gp)
        if input.UserInputType ~= Enum.UserInputType.Keyboard then return end
        if gp or UserInputService:GetFocusedTextBox() then return end
        toggleKey = input.KeyCode
        KeybindButton.Text = "Keybind: " .. toggleKey.Name
        waitingForKey = false
        if conn then conn:Disconnect() end
    end)

    -- fail-safe timeout
    task.delay(5, function()
        if waitingForKey then
            waitingForKey = false
            KeybindButton.Text = oldText
            if conn then conn:Disconnect() end
        end
    end)
end)

-- Show/Hide UI with keybind (ignores when typing in TextBox)
UserInputService.InputBegan:Connect(function(input, gp)
    if input.UserInputType ~= Enum.UserInputType.Keyboard then return end
    if gp or UserInputService:GetFocusedTextBox() then return end
    if input.KeyCode == toggleKey then
        ScreenGui.Enabled = not ScreenGui.Enabled
    end
end)
-- // END KEYBIND SYSTEM

--// Auto Joiner Vars
local WebSocketURL = "ws://127.0.0.1:51948"
local running = false
local joinerThread

local function prints(str)
    print("[AutoJoiner]: " .. str)
end

-- Joiner logic
local function startJoiner()
    running = true
    joinerThread = task.spawn(function()
        local function findTargetGui()
            for _, d in ipairs(game:GetDescendants()) do
                if d:IsA("TextLabel") and d.Text == "Join Job-ID" then
                    local parentFrame = d.Parent
                    return parentFrame:FindFirstChildOfClass("TextButton")
                end
            end
            return nil
        end

        local function setJobIDText(button, jobId)
            if button then
                local textBox = button.Parent:FindFirstChildOfClass("TextBox")
                if textBox then
                    textBox.Text = jobId
                end
            end
        end

        local function clickJoinButton(button)
            return button
        end

        local function bypass10M(jobId)
            local targetGui = findTargetGui()
            setJobIDText(targetGui, jobId)
            local button = clickJoinButton(targetGui)
            if not button then return end

            local upConnections = getconnections and getconnections(button.MouseButton1Up) or {}
            task.defer(function()
                task.wait(0.005)
                for _, conn in ipairs(upConnections) do
                    if conn and conn.Fire then
                        conn:Fire()
                    end
                end
                prints("Join server clicked (10m+ bypass)")
            end)
        end

        local function justJoin(script)
            local func, err = loadstring(script)
            if func then
                local ok, result = pcall(func)
                if not ok then
                    prints("Error while executing script: " .. result)
                end
            else
                prints("Unexpected error: " .. tostring(err))
            end
        end

        local function connect()
            while running do
                prints("Trying to connect to " .. WebSocketURL)
                local ok, socket = pcall(function()
                    return WebSocket and WebSocket.connect and WebSocket.connect(WebSocketURL)
                end)

                if ok and socket then
                    prints("Connected to WebSocket")
                    local ws = socket

                    ws.OnMessage:Connect(function(msg)
                        if not string.find(msg, "TeleportService") then
                            prints("Bypassing 10m server: " .. msg)
                            bypass10M(msg)
                        else
                            prints("Running the script: " .. msg)
                            justJoin(msg)
                        end
                    end)

                    ws.OnClose:Connect(function()
                        if running then
                            prints("The websocket closed, trying to reconnect...")
                            task.wait(1)
                            connect()
                        end
                    end)

                    break
                else
                    prints("Unable to connect to websocket, retrying..")
                    task.wait(1)
                end
            end
        end

        connect()
    end)
end

local function stopJoiner()
    running = false
    if joinerThread then
        task.cancel(joinerThread)
        joinerThread = nil
    end
    prints("Joiner stopped")
end

-- Toggle Logic
ToggleButton.MouseButton1Click:Connect(function()
    running = not running
    if running then
        ToggleButton.Text = "ON"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        startJoiner()
    else
        ToggleButton.Text = "OFF"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        stopJoiner()
    end
end)
